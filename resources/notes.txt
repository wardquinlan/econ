Notes
=====

  - note that ECON_HOME will remain as an environment variable
  - also note that these will not be checked into GIT

(?) I would like to support Econ --define some-setting=some-value from the command line.  An arbitrary # of them...

Other settings can include:
  - settings.confirm = FALSE | TRUE
  - if TRUE, then prompt a confirmation for "dangerous" functions, such as insert(), delete(), save()

Import() may want to do 2 passes.  1st pass puts everything into a TreeMap.  Which handles overwrites.  Then second pass
just traverses the tree map.  We also don't have to sort it, either.
  - only for QTEMPLATE and QDB sources...
Or: just overwrite the value
  
(?) We should use TreeMap rather than HashMap for the symbol table

I have also considered new functions:
  - Object read();
  - reads object from stdin (Integer, Float, Boolean, or String)
  - save(); --> saves an entire series
  - merge(); --> merges to an existing series
  - insert();
  - * this could potentially insert right into the datastore, being consistent with functions like data() and meta()
  - delete();
  - takes a date or an index
  - connect()
  - could take parameters to connect
  - will only ever allow either 0 or 1 connection per instance, and it is automatically disconnected
  - Object getXXXX(Series);
  - Object setXXXX(Series, Object);
  - XXXX is one of: {Id, Name, Title, Source, SourceId, Notes}
  - String timestamp();
  - size(Series);
    => need to support series on database
      
Series will have to support BOOLs for conditions.  But we probably don't have to save these to the datastore  

- may want to use a HATCH pattern to draw a chart with invalid data e.g. log scaling

- may want to replace Float with Double everywhere

- may want to get rid of Deprecation warnings in Parser.java (JDK 1.17)

- may want to have 2 different orders of precedence for == and <, etc

- may want to introduce '!' operator

