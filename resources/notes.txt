June 2023
---------

If we overflow gridline array, we get an array out of bounds.  Should probably fix this.


September 2023
--------------

In order to support if() statements without {} blocks, I think I need ANOTHER PARSER PASS.  This pass would go through and insert the {} blocks around the if / else blocks as needed.
This could be a completely different parser, or it could be the same parser with some sort of flag.

The reason we need to do this is because we need to call the parser to get the whole list of tokens to insert into the block ... but we can't directly call the parser as is because
that would evaluate the block.  Which we don't want to do.

We need a parser pass which generates the list of tokens, but WITHOUT ACTUALLY DOING THE EVALUATION.

-----

We can define 2 new functions:

void define(String name, Object value);
boolean defined(String name);

These functions define / determine if something is defined ... at the GLOBAL scope.  It has to be at the GLOBAL scope.  If it is at the LOCAL scope, then
it will fall out of scope, and defined() will always return false.

Then, we can do this at the beginning of include files:

if (!defined(FUNCTIONS_)) {
define('FUNCTIONS_', 1);

# ... body of 'FUNCTIONS'
  
}

-----

We might also want to add a new column to TIME_SERIES:

LAST_MERGED TIMESTAMP;

We just update each series with the last merge time.  It can be NULL for backwards compatibility purposes.

